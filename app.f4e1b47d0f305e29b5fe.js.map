{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/styles/main.scss","webpack:///./src/components/Editor/PanelEditProps.tsx","webpack:///./src/index.tsx","webpack:///./src/components/NavPanelScreen/styles.scss","webpack:///./src/redux/project/reducer.ts","webpack:///./src/constants/images.ts","webpack:///./src/components/UI/styles.scss","webpack:///./src/components/LeftPanel/styles.scss","webpack:///./src/redux/store.ts","webpack:///./src/components/UI/Modal.tsx","webpack:///./src/containers/ProjectsLogic.tsx","webpack:///./src/components/Editor/styles.scss","webpack:///./src/redux/sagas.ts","webpack:///./src/components/LeftPanel/index.tsx","webpack:///./src/components/UI/Icon.tsx","webpack:///./src/containers/EditorLogic.tsx","webpack:///./src/components/Editor/SortableGroup.tsx","webpack:///./src/containers/App.tsx","webpack:///./src/sprites/logo.png","webpack:///./src/components/Projects/index.tsx","webpack:///./src/sprites/icons.svg","webpack:///./src/sprites/profile_empty.png","webpack:///./src/components/Projects/styles.scss","webpack:///./src/components/ModalsOfMsg/index.tsx","webpack:///./src/components/Editor/index.tsx","webpack:///./src/redux/user/reducer.ts","webpack:///./src/components/TopPanel/index.tsx","webpack:///./src/redux/constants.ts","webpack:///./src/utils/parseListItems.ts","webpack:///./src/constants/menu.ts","webpack:///./src/components/TopPanel/styles.scss","webpack:///./src/components/UI/RenderElements.tsx","webpack:///./src/styles/global.scss","webpack:///./src/redux/project/actions.ts","webpack:///./src/containers/Recursive.tsx","webpack:///./src/components/UI/Button.tsx","webpack:///./src/redux/user/actions.ts","webpack:///./src/components/NavPanelScreen/index.tsx","webpack:///./src/components/Editor/ModalAddElement.tsx","webpack:///./src/components/UI/Checkbox.tsx","webpack:///./src/utils/createTypes.ts"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","installedChunks","push","Object","prototype","hasOwnProperty","call","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","0","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","app","container","minimiser","React","Button_1","Icon_1","Checkbox_1","styles","PanelEditProps","_ref","activeItem","isMoving","disablePanel","addElement","dellElement","onChangeMove","onChangeGrid","createElement","className","propsPanel","navigate","default","label","onChange","checked","activeElement","type","onClick","disabled","Icon","icon","itemId","parentId","delElement","react_dom_1","react_redux_1","react_1","store_1","App_1","configureStore","store","persistor","render","Provider","PersistGate","loading","document","getElementById","main","tabs","active","addScreen","modal__body","icoAddScreen","screenName","browseImg","reduxsauce_1","constants_1","HANDLERS","_HANDLERS","_defineProperty3","SET_LIST_PROJECT","state","listProject","assign","SET_LIST_PROJECT_LOADER","_ref3","listProjectLoader","SET_PROJECT","_ref2","project","currentProject","SET_SCREEN","_ref4","screen","currentScreen","SET_PROJECT_LOADER","_ref5","projectLoader","SET_SCREEN_LOADER","_ref6","screenLoader","createReducer","IMAGES","prof","logo","button","none","primary","confirm","secondary","checkbox","radiobuttonGroup","hasLabel","modal__wrapper","modal__backdrop","modal__inner","modal__header","title","hasActions","modal__actions","minPanel","username","navigating","redux_1","redux_persist_1","storage_1","redux_saga_1","connected_react_router_1","history_1","sagas_1","reducer_1","reducer_2","userPersistConfig","whitelist","storage","projectPersistConfig","sagaMiddleware","history","createBrowserHistory","composeEnhancers","_typeof3","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","createStore","combineReducers","user","persistReducer","router","connectRouter","applyMiddleware","routerMiddleware","run","persistStore","classnames_1","confirmText","cancelText","onConfirm","onClose","confirmDisabled","children","react_hot_loader_1","actions","Projects_1","connect","props","dispatch","bindActionCreators","hot","getListProject","createProject","delProject","getProject","navBar","navBarTypeScreen","navBarRight","contain","wrapper","section","boardWrapper","groupItem","item","addProject","getScreen","delScreen","setListSortable","mySaga","effects_1","R","actions_1","parseListItems_1","mockListProject","id","status","countScreens","mockProject","listScreen","mockScreenData","_regenerator2","wrap","_context","prev","next","put","setListProjectLoader","setListProjects","stop","_marked","this","_context2","uniqueId","select","sent","concat","_toConsumableArray3","_marked2","newListProject","_context3","filter","_marked3","projectId","screenId","screenData","payload","_context4","abrupt","setScreenLoader","JSON","parse","prop","find","listSortable","getList","setScreen","_marked4","_ref7","_ref8","_context5","setProjectLoader","setProject","_marked5","_ref9","_ref10","newProject","_context6","root","assoc","_marked6","_ref11","_ref12","lastScreenId","_context7","last","_marked7","_ref13","_ref14","newListSortable","newScreenData","newScreen","itemSortable","_context8","getListRevers","_marked8","_ref15","_ref16","_context9","_marked9","_ref17","_ref18","_context10","dissoc","_marked10","_context11","takeLatest","GET_LIST_PROJECT","CREATE_PROJECT","DEL_PROJECT","GET_PROJECT","GET_SCREEN","DEL_SCREEN","ADD_SCREEN","SET_LIST_SORTABLE","ADD_ELEMENT","DEL_ELEMENT","_marked11","Date","getTime","react_router_dom_1","images_1","userType","minLPanel","src","alt","NavLink","exact","to","activeClassName","_ref$size","size","undefined","width","height","viewBox","xlinkHref","x","y","stroke","mask","Editor_1","NavPanelScreen_1","match","params","Fragment","Sortable","SortableGroup","disableSortable","parent","group","onChoose","options","swapThreshold","draggable","ent","oldIndex","ref","sortable","option","items","evt","LeftPanel_1","TopPanel_1","ProjectsLogic_1","EditorLogic_1","Component","_classCallCheck3","_this","_possibleConstructorReturn3","__proto__","getPrototypeOf","onMinimiserLPanel","changeMinLPanel","ConnectedRouter","Switch","Route","path","component","Redirect","from","ModalsOfMsg_1","Modal_1","Projects","search","projectName","modalOpen","newProjectDanger","selectAll","handleClick","e","preventDefault","console","log","changeSearch","setState","target","changeSelectAll","changeProjectName","openModal","cancelModal","paymentProjectAll","_props","_this2","_state","tools","content","placeholder","map","Link","textNavy","dowloadProject","paymentProject","payment","deleteProject","delete","Modals","typeModal","messageModal","onConfirmModal","_onConfirm","react_router_1","PanelEditProps_1","Recursive_1","ModalAddElement_1","Editor","openModalAdd","modalAddScreen","openModalDell","modalDellScreen","closeModal","_this$state","scenario","newElement","onConfirmModalDell","_this$props","onSelectScenario","onItemActive","handleDellElement","updateSortableList","_this$props2","changeMoveElements","saveScreen","changeScenario","nextProps","ModalAddElement","onCloseModal","Prompt","when","message","CHANGE_L_PANEL","TopPanel","handleChange","btn_minLPanel","createTypes_1","SET_SCREEN_DATA","parseList","arguments","reduce","obj","listChildren","itemRoot","listItems","Number","replace","optionsUIMenu","RENDERERS","block","data-id","elem","input","hyperLine","href","RenderElements_1","SortableGroup_1","Recursive","handleChoose","itemIndex","currentItem","element","RecursiveConnected","childId","validTypes","_ref$className","indexOf","ON_CONFIRM_MODAL","NavPanelScreen","modalMsgDanger","openScreen","changeScreenName","handleAddScreen","_props2","menu_1","Ceckbox","htmlFor","memo","types","newTypes","keys","forEach"],"mappings":"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","file":"app.f4e1b47d0f305e29b5fe.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t0: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([\"2YZa\",1]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"main__app__2gaoj\",\"container\":\"main__container__3tW0A\",\"minimiser\":\"main__minimiser__5QMpo\"};","import * as React from 'react';\nimport Button from '$components/UI/Button';\nimport { Icon } from '$components/UI/Icon';\nimport { IActiveItem } from '$components/Editor';\nimport Checkbox from '$components/UI/Checkbox';\n\nconst styles = require('./styles.scss');\n\ninterface IComponentProps {\n  activeItem: IActiveItem,\n  disablePanel: boolean,\n  isMoving: boolean,\n  addElement: () => void,\n  dellElement: () => void,\n  onChangeMove: (event) => void,\n  onChangeGrid: (event) => void,\n}\n\nconst Component: React.FunctionComponent<IComponentProps> = ({\n  activeItem,\n  isMoving,\n  disablePanel,\n  addElement,\n  dellElement,\n  onChangeMove,\n  onChangeGrid,\n}) => {\n  return (\n    <div className={styles.propsPanel}>\n      <div className={styles.navigate}>\n        <Checkbox\n          name=\"isGrid\"\n          label=\"Grid\"\n          onChange={onChangeGrid}\n        />\n        <Checkbox\n          name=\"isMoving\"\n          label=\"Moving\"\n          checked={isMoving}\n          onChange={onChangeMove}\n        />\n      </div>\n      <div className={styles.activeElement}>\n        <Button\n          className={styles.addElement}\n          type=\"none\"\n          onClick={addElement}\n          disabled={disablePanel}\n        >\n          <Icon icon=\"addCircle\" />\n        </Button>\n        <p>\n          {`select: ${activeItem.itemId}`}\n        </p>\n        { activeItem.parentId !== '-1' && (\n          <Button\n            className={styles.delElement}\n            type=\"none\"\n            onClick={dellElement}\n            disabled={disablePanel}\n          >\n            <Icon icon=\"delete\" />\n          </Button>\n        )}\n      </div>\n      <div>\n        Panel Edit Props\n      </div>\n    </div>\n  );\n};\n\nexport const PanelEditProps = Component;\n","import * as React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { configureStore } from '$redux/store';\nimport App from '$containers/App';\n\nrequire('./styles/main.scss');\n\nconst { store, persistor } = configureStore();\n\nrender(\n  <Provider store={store}>\n    <PersistGate loading={null} persistor={persistor}>\n      <App />\n    </PersistGate>\n  </Provider>,\n  document.getElementById('app'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles__main__3J_ub\",\"tabs\":\"styles__tabs__2vh2h\",\"active\":\"styles__active__30JOt\",\"addScreen\":\"styles__addScreen__102Jo\",\"modal__body\":\"styles__modal__body__3pZrM\",\"icoAddScreen\":\"styles__icoAddScreen__3WHlZ\",\"screenName\":\"styles__screenName__24105\",\"browseImg\":\"styles__browseImg__1Xrhq\"};","import { createReducer } from 'reduxsauce';\n\nimport * as ACTIONS from '$redux/project/actions';\nimport TYPES from '$redux/constants';\nimport { IListSortable } from '$utils/parseListItems';\n\n\nexport interface IListProject {\n  id: string,\n  status: string,\n  name: string,\n  countScreens: number,\n}\n\nexport interface IListScreen {\n  id: number,\n  type: string,\n  children: IListScreen[],\n}\n\nexport interface IProjectScreen {\n  id: string,\n  name: string,\n  screenData: IListScreen[],\n  listSortable?: IListSortable\n  screenLoader?: boolean,\n}\n\nexport interface IProjectListItem {\n  id: string,\n  name: string,\n}\n\nexport interface IProject {\n  id: string,\n  name: string,\n  listScreen: IProjectListItem[],\n  projectLoader?: boolean,\n}\n\nexport type IRootState = Readonly<{\n  listProject: IListProject[],\n  currentProject: IProject,\n  currentScreen: IProjectScreen,\n  listProjectLoader: boolean,\n}>;\n\ntype UnsafeReturnType<T> = T extends (...args: any[]) => infer R ? R : any;\n\ninterface ActionHandler<T> {\n    (state: IRootState, payload: UnsafeReturnType<T>): IRootState;\n}\n\nconst setListProject: ActionHandler<typeof ACTIONS.setListProjects> = (state, { listProject }) => ({\n  ...state,\n  listProject,\n});\n\nconst setProject: ActionHandler<typeof ACTIONS.setProject> = (state, { project }) => ({\n  ...state,\n  currentProject: project,\n});\n\nconst setLoaderListProject: ActionHandler<boolean> = (state, { active }) => ({\n  ...state,\n  listProjectLoader: active,\n});\n\nconst setScreen: ActionHandler<typeof ACTIONS.setScreen> = (state, { screen }) => ({\n  ...state,\n  currentScreen: screen,\n});\n\nconst setProjectLoader: ActionHandler<typeof ACTIONS.setProjectLoader> = (state, { active }) => ({\n  ...state,\n  currentProject: { ...state.currentProject, projectLoader: active },\n});\n\nconst setScreenLoader: ActionHandler<typeof ACTIONS.setProjectLoader> = (state, { active }) => ({\n  ...state,\n  currentScreen: { ...state.currentScreen, screenLoader: active },\n});\n\nconst HANDLERS = {\n  [TYPES.SET_LIST_PROJECT]: setListProject,\n  [TYPES.SET_LIST_PROJECT_LOADER]: setLoaderListProject,\n  [TYPES.SET_PROJECT]: setProject,\n  [TYPES.SET_SCREEN]: setScreen,\n  [TYPES.SET_PROJECT_LOADER]: setProjectLoader,\n  [TYPES.SET_SCREEN_LOADER]: setScreenLoader,\n};\n\nconst INITIAL_STATE: IRootState = {\n  listProject: null,\n  currentProject: null,\n  currentScreen: null,\n  listProjectLoader: false,\n};\n\nexport default createReducer(INITIAL_STATE, HANDLERS);\n","export interface IImages {\n    [key: string]: string,\n}\n\nexport const IMAGES = {\n  default: null,\n  prof: require('../sprites/profile_empty.png'),\n  logo: require('../sprites/logo.png'),\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles__button__3foUu\",\"none\":\"styles__none__82NqJ\",\"primary\":\"styles__primary__1Ddei\",\"confirm\":\"styles__confirm__1HnDv\",\"secondary\":\"styles__secondary__2gXN-\",\"checkbox\":\"styles__checkbox__3ZRa7\",\"radiobuttonGroup\":\"styles__radiobuttonGroup__O9A1a\",\"hasLabel\":\"styles__hasLabel__tKit3\",\"label\":\"styles__label__27CUk\",\"disabled\":\"styles__disabled__3SOnZ\",\"modal__wrapper\":\"styles__modal__wrapper__bUxYJ\",\"modal__backdrop\":\"styles__modal__backdrop__3Gwhd\",\"modal__inner\":\"styles__modal__inner__2q_jQ\",\"modal__header\":\"styles__modal__header__1JZ1E\",\"title\":\"styles__title__3_-zJ\",\"modal__body\":\"styles__modal__body__2eRwo\",\"hasActions\":\"styles__hasActions__1tsqy\",\"modal__actions\":\"styles__modal__actions__2hxWV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles__main__3KAGG\",\"minPanel\":\"styles__minPanel__MS-fE\",\"logo\":\"styles__logo__UJY7M\",\"prof\":\"styles__prof__1__Oa\",\"username\":\"styles__username__3jjrk\",\"navigating\":\"styles__navigating__26g06\"};","import {\n  createStore, applyMiddleware, combineReducers, compose, Store,\n} from 'redux';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\nimport { connectRouter, routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { PersistConfig, Persistor } from 'redux-persist/es/types';\n\nimport userSaga from '$redux/sagas';\nimport userReducer from '$redux/user/reducer';\nimport projectReducer from '$redux/project/reducer';\n\nconst userPersistConfig: PersistConfig = {\n  key: 'user',\n  whitelist: ['user', 'minLPanel'],\n  storage,\n};\n\nconst projectPersistConfig: PersistConfig = {\n  key: 'project',\n  whitelist: ['listProject', 'currentProject', 'currentScreen'],\n  storage,\n};\n\nexport const sagaMiddleware = createSagaMiddleware();\nexport const history = createBrowserHistory();\n\nconst composeEnhancers = typeof window === 'object'\n  && (<any>window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n  ? (<any>window).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({})\n  : compose;\n\nexport const store = createStore(\n  combineReducers({\n    user: persistReducer(userPersistConfig, userReducer),\n    project: persistReducer(projectPersistConfig, projectReducer),\n    router: connectRouter(history),\n  }),\n  composeEnhancers(applyMiddleware(\n    routerMiddleware(history),\n    sagaMiddleware,\n  )),\n);\n\nexport function configureStore(): { store: Store<any>, persistor: Persistor } {\n  sagaMiddleware.run(userSaga);\n\n  const persistor = persistStore(store);\n\n  return { store, persistor };\n}\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport Button from '$components/UI/Button';\n\nconst styles = require('./styles.scss');\n\ninterface IModalProps {\n  title: string,\n  confirmText?: string,\n  cancelText?: string,\n  onConfirm?: () => void,\n  onClose: () => void,\n  children?: any,\n  confirmDisabled?: boolean\n}\n\nconst Modal: React.FunctionComponent<IModalProps> = ({\n  title,\n  confirmText,\n  cancelText,\n  onConfirm,\n  onClose,\n  confirmDisabled,\n  children,\n}) => (\n  <div className={styles.modal__wrapper}>\n    <div\n      className={styles.modal__backdrop}\n      onClick={() => (onConfirm ? null : onClose())}\n    />\n    <div\n      className={classNames(styles.modal__inner, cancelText || (confirmText && onConfirm) ? styles.hasActions : '')}\n    >\n      <div className={styles.modal__header}>\n        <h3 className={styles.title}>\n          {title}\n        </h3>\n        <Button\n          type=\"none\"\n          onClick={() => onClose()}\n        >\n          <i className=\"material-icons\">close</i>\n        </Button>\n      </div>\n      <div className={styles.modal__body}>\n        {children}\n      </div>\n      <div className={styles.modal__actions}>\n        {cancelText && (\n        <Button\n          type=\"secondary\"\n          onClick={() => {\n            onClose();\n            return true;\n          }}\n        >\n          {cancelText}\n        </Button>\n        )}\n        {confirmText && onConfirm && (\n        <Button\n          type={cancelText ? 'confirm' : 'primary'}\n          disabled={!!confirmDisabled}\n          onClick={() => {\n            onConfirm && onConfirm();\n            return true;\n          }}\n        >\n          {confirmText}\n        </Button>\n        )}\n      </div>\n    </div>\n  </div>\n);\nexport default Modal;\n","import * as React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { hot } from 'react-hot-loader';\n\nimport * as actions from '$redux/project/actions';\nimport Projects from '$components/Projects';\nimport { IListProject } from '$redux/project/reducer';\n\ninterface IDashboardProps {\n  listProject: IListProject[],\n  getListProject: actions.TGetListProject,\n  createProject: actions.TCreateProject,\n  delProject: actions.TDelProject,\n  getProject: actions.TGetProject,\n}\n\nconst ProjectsLogic: React.FunctionComponent<IDashboardProps> = ({\n  listProject,\n  getListProject,\n  createProject,\n  delProject,\n  getProject,\n}) => (\n  <Projects\n    listProject={listProject}\n    getListProject={getListProject}\n    createProject={createProject}\n    delProject={delProject}\n    getProject={getProject}\n  />\n);\n\nconst mapStateToProps = (state, props) => ({\n  listProject: state.project.listProject,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({ ...actions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(hot(module)(ProjectsLogic));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles__main__BSnq2\",\"navBar\":\"styles__navBar__2r_Qa\",\"navBarTypeScreen\":\"styles__navBarTypeScreen__2KijW\",\"navBarRight\":\"styles__navBarRight__3vskY\",\"contain\":\"styles__contain__4fy9e\",\"wrapper\":\"styles__wrapper__2p-DV\",\"propsPanel\":\"styles__propsPanel__rlD9W\",\"navigate\":\"styles__navigate__2Qeus\",\"activeElement\":\"styles__activeElement__1u3_g\",\"addElement\":\"styles__addElement__3qQg2\",\"dellElement\":\"styles__dellElement__1bdjX\",\"modal__body\":\"styles__modal__body__OAqzB\",\"section\":\"styles__section__whEyt\",\"boardWrapper\":\"styles__boardWrapper__2SDOG\",\"groupItem\":\"styles__groupItem__1fQD1\",\"item\":\"styles__item__3UWr_\"};","import {\n  takeLatest, put, select, call,\n} from 'redux-saga/effects';\nimport * as R from 'ramda';\n// import { REHYDRATE } from 'redux-persist';\n// import { LOCATION_CHANGE, LocationChangeAction } from 'connected-react-router';\n// import { delay } from 'redux-saga';\n\nimport TYPES from '$redux/constants';\nimport {\n  IListProject,\n  IListScreen,\n  IProject,\n  IProjectScreen,\n} from '$redux/project/reducer';\nimport {\n  setListProjects,\n  setListProjectLoader,\n  setProject,\n  setScreen,\n  setProjectLoader,\n  setScreenLoader,\n} from '$redux/project/actions';\nimport { getList, getListRevers, IListSortable } from '$utils/parseListItems';\n\n\nconst mockListProject = [{\n  id: '299000ff43933',\n  status: 'pending',\n  name: 'test',\n  countScreens: 0,\n}];\nconst mockProject = {\n  id: '299000ff43933',\n  name: 'test',\n  listScreen: [\n    { id: 's-1554270037862', name: 'screen - 1' },\n    { id: '2', name: 'test screen - 2' },\n  ],\n};\nconst mockScreenData = '[{\"type\":\"block\",\"id\":3,\"children\":[{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":6,\"children\":[{\"props\":{\"width\":120,\"buoyancy\":100,\"html_type\":\"text_title\",\"height\":50},\"type\":\"elem\",\"id\":7,\"children\":[]},{\"props\":{\"width\":150,\"buoyancy\":98,\"html_type\":\"text_description\",\"height\":40},\"type\":\"elem\",\"id\":8,\"children\":[]}]},{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":7,\"children\":[{\"props\":{\"width\":150,\"buoyancy\":64,\"html_type\":\"input_firstname\",\"height\":80},\"type\":\"elem\",\"id\":9,\"children\":[]},{\"props\":{\"width\":150,\"buoyancy\":61,\"html_type\":\"input_lastname\",\"height\":80},\"type\":\"elem\",\"id\":10,\"children\":[]}]},{\"orientation\":\"horizontal\",\"type\":\"group\",\"id\":8,\"children\":[{\"props\":{\"width\":40,\"buoyancy\":54,\"html_type\":\"select_day\",\"height\":20},\"type\":\"elem\",\"id\":11,\"children\":[]},{\"props\":{\"width\":40,\"buoyancy\":54,\"html_type\":\"select_month\",\"height\":20},\"type\":\"elem\",\"id\":12,\"children\":[]},{\"props\":{\"width\":40,\"buoyancy\":54,\"html_type\":\"select_year\",\"height\":20},\"type\":\"elem\",\"id\":13,\"children\":[]}]},{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":2,\"children\":[{\"props\":{\"width\":150,\"buoyancy\":10,\"html_type\":\"input_password\",\"height\":80},\"type\":\"elem\",\"id\":2,\"children\":[]},{\"props\":{\"width\":150,\"buoyancy\":10,\"html_type\":\"input_password\",\"height\":80},\"type\":\"elem\",\"id\":3,\"children\":[]}]},{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":4,\"children\":[{\"props\":{\"width\":150,\"buoyancy\":1,\"html_type\":\"button_end_composite_scenario\",\"height\":80},\"type\":\"elem\",\"id\":5,\"children\":[]}]}]},{\"type\":\"block\",\"id\":1,\"children\":[{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":1,\"children\":[{\"props\":{\"width\":150,\"buoyancy\":86,\"html_type\":\"input_phone\",\"height\":80},\"type\":\"elem\",\"id\":0,\"children\":[]},{\"props\":{\"width\":150,\"buoyancy\":10,\"html_type\":\"input_password\",\"height\":80},\"type\":\"elem\",\"id\":1,\"children\":[]}]},{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":3,\"children\":[{\"props\":{\"width\":150,\"buoyancy\":1,\"html_type\":\"button_end_composite_scenario\",\"height\":80},\"type\":\"elem\",\"id\":4,\"children\":[]}]}]},{\"type\":\"block\",\"id\":2,\"children\":[{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":5,\"children\":[{\"props\":{\"width\":100,\"buoyancy\":2,\"html_type\":\"hyperlink_end simple_scenario\",\"height\":80},\"type\":\"elem\",\"id\":6,\"children\":[]}]}]},{\"type\":\"block\",\"id\":4,\"children\":[{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":9,\"children\":[{\"props\":{\"width\":150,\"buoyancy\":0,\"html_type\":\"button_end simple_scenario\",\"height\":80},\"type\":\"elem\",\"id\":14,\"children\":[]}]}]}]';\n// const mockScreenData = '[{\"type\":\"block\",\"id\":3,\"children\":[{\"orientation\":\"vertical\",\"type\":\"group\",\"id\":6,\"children\":[{\"props\":{\"width\":120,\"buoyancy\":100,\"html_type\":\"text_title\",\"height\":50},\"type\":\"elem\",\"id\":7,\"children\":[]},{\"props\":{\"width\":150,\"buoyancy\":98,\"html_type\":\"text_description\",\"height\":40},\"type\":\"elem\",\"id\":8,\"children\":[]}]},{\"orientation\":\"horizontal\",\"type\":\"group\",\"id\":4,\"children\":[{\"props\":{\"width\":150,\"buoyancy\":1,\"html_type\":\"button_end_composite_scenario\",\"height\":80},\"type\":\"elem\",\"id\":5,\"children\":[]}]}]}]';\n\n\nexport const uniqueId = () => new Date().getTime();\n\n// function* loadInitStart() {}\n// function* authCheckSaga() {}\n/*\nfunction* openLastPage({ payload }: LocationChangeAction) {\n  // if (payload.location.pathname.match('^(\\\\/project\\\\/)')) {\n  // const id: string = payload.location.pathname.match(/[^\\\\/]+$/)[0];\n}\n*/\n\nfunction* getListProject() {\n  yield put(setListProjectLoader(true));\n  // TODO: axios yield call(Requester.get, `/listProject`)\n  const result: IListProject[] = mockListProject;\n\n  yield put(setListProjects(result));\n  yield put(setListProjectLoader(false));\n}\n\nfunction* addProject({ name }) {\n  // TODO: axios yield call(Requester.put, `/project/${name}`)\n  const result: IListProject = {\n    id: `p-${uniqueId()}`,\n    status: 'pending',\n    name,\n    countScreens: 0,\n  };\n\n  const { project: { listProject } } = yield select(state => state);\n\n  yield put(setListProjects([...(listProject || mockListProject), result]));\n}\n\nfunction* delProject({ id }) {\n// TODO: axios yield call(Requester.delete,`/project/${projectId}`)\n  const { project: { listProject } } = yield select(state => state);\n  const newListProject: IListProject[] = listProject.filter(project => project.id !== id);\n\n  yield put(setListProjects(newListProject));\n}\n\nfunction* getScreen({ payload }) {\n  const { projectId, screenId } = payload;\n\n  if (!projectId || !screenId) {\n  // show error\n    return;\n  }\n\n  yield put(setScreenLoader(true));\n  // TODO: axios yield call(Requester.get, `/project/${id)/screen/${screenId}`)\n\n  const { project: { currentProject: { listScreen } } } = yield select(state => state);\n  const screenData = screenId === 's-1554270037862' ? JSON.parse(mockScreenData) : [];\n\n  const result: IProjectScreen = {\n    id: screenId,\n    name: R.prop('name', listScreen.find(p => p.id === screenId)) || 'newScreen',\n    screenData,\n    listSortable: getList(screenData),\n  };\n\n  yield put(setScreenLoader(false));\n\n  if (result) {\n    yield put(setScreen(result));\n  }\n}\n\nfunction* getProject({ id }) {\n  const { project: { currentProject } } = yield select(state => state);\n\n  if (!currentProject || currentProject.id !== id) {\n    yield put(setProjectLoader(true));\n    // TODO: axios yield call(Requester.get, `/project/${id)`)\n    const result: IProject = mockProject;\n\n    if (result) {\n      yield put(setProject(result));\n      yield put(setProjectLoader(false));\n\n      const screenId: string = result.listScreen.length && result.listScreen[0].id;\n\n      if (screenId) {\n        yield call(getScreen, { payload: { projectId: id, screenId } });\n      } else {\n        yield put(setScreen(null));\n      }\n    } else {\n      // msg Error\n      yield put(setProjectLoader(false));\n    }\n  }\n}\n\nfunction* addScreen({ payload }) {\n  const {\n    // projectId,\n    name,\n  } = payload;\n  // TODO: axios yield call(Requester.put,`/project/${projectId}/screen/${name}`)\n  const result: IProjectScreen = {\n    id: `s-${uniqueId()}`,\n    name,\n    screenData: [],\n    listSortable: {\n      root: {\n        id: 'root',\n        type: 'root',\n        children: [],\n      },\n    },\n  };\n\n  yield put(setScreen(result));\n\n  const { project: { currentProject } } = yield select(state => state);\n\n  const newProject: IProject = R.assoc(\n    'listScreen',\n    [\n      ...currentProject.listScreen,\n      { id: result.id, name: result.name },\n    ],\n    currentProject,\n  );\n\n  yield put(setProject(newProject));\n}\n\nfunction* delScreen({ payload }) {\n  const {\n    projectId,\n    screenId,\n  } = payload;\n  const { project: { currentProject } } = yield select(state => state);\n  // TODO: axios yield call(Requester.delete,`/project/${projectId}/screen/${screenId}`)\n  const result: IProject = R.assoc(\n    'listScreen',\n    currentProject.listScreen.filter(s => s.id !== screenId),\n    currentProject,\n  );\n\n  yield put(setProject(result));\n\n  const lastScreenId: string = R.prop('id', R.last(result.listScreen));\n\n  if (lastScreenId) {\n    yield call(getScreen, { payload: { projectId, screenId: lastScreenId } });\n  } else {\n    yield put(setScreen(null));\n  }\n}\n\nfunction* setListSortable({ itemSortable }) {\n  const { project: { currentScreen } } = yield select(state => state);\n  const newListSortable: IListSortable = { ...currentScreen.listSortable, ...itemSortable };\n  const newScreenData: IListScreen[] = getListRevers(newListSortable);\n\n  const newScreen = {\n    ...currentScreen,\n    screenData: newScreenData,\n    listSortable: newListSortable,\n  };\n\n  // TODO: axios yield call(Requester.set, `/project/${id)/screen/${screenId}`)\n  yield put(setScreen(newScreen));\n}\n\nfunction* addElement({ payload }) {\n  const { parentId, item } = payload;\n  const { project: { currentScreen } } = yield select(state => state);\n  const itemSortable: IListSortable = R.assoc(item.id, item, currentScreen.listSortable);\n  const listSortable: IListSortable = {\n    ...currentScreen.listSortable,\n    ...itemSortable,\n    [parentId]: {\n      ...currentScreen.listSortable[parentId],\n      children: [\n        ...currentScreen.listSortable[parentId].children,\n        item.id,\n      ],\n    },\n  };\n\n  const newScreen: IProjectScreen = {\n    ...currentScreen,\n    listSortable,\n    screenData: getListRevers(listSortable),\n  };\n\n  yield put(setScreen(newScreen));\n}\n\nfunction* dellElement({ payload }) {\n  const { parentId, itemId } = payload;\n  const { project: { currentScreen } } = yield select(state => state);\n\n  const listSortable = {\n    ...R.dissoc(itemId, currentScreen.listSortable),\n    [parentId]: {\n      ...currentScreen.listSortable[parentId],\n      children: currentScreen.listSortable[parentId].children.filter(id => id !== itemId),\n    },\n  };\n\n  const newScreen: IProjectScreen = {\n    ...currentScreen,\n    listSortable,\n    screenData: getListRevers(listSortable),\n  };\n\n  yield put(setScreen(newScreen));\n}\n\nfunction* mySaga() {\n  // yield fork(loadInitStart);\n  // yield takeLatest(REHYDRATE, authCheckSaga);\n  // yield takeLatest(LOCATION_CHANGE, openLastPage);\n\n  yield takeLatest(TYPES.GET_LIST_PROJECT, getListProject);\n  yield takeLatest(TYPES.CREATE_PROJECT, addProject);\n  yield takeLatest(TYPES.DEL_PROJECT, delProject);\n\n  yield takeLatest(TYPES.GET_PROJECT, getProject);\n\n  yield takeLatest(TYPES.GET_SCREEN, getScreen);\n  yield takeLatest(TYPES.DEL_SCREEN, delScreen);\n  yield takeLatest(TYPES.ADD_SCREEN, addScreen);\n  yield takeLatest(TYPES.SET_LIST_SORTABLE, setListSortable);\n  yield takeLatest(TYPES.ADD_ELEMENT, addElement);\n  yield takeLatest(TYPES.DEL_ELEMENT, dellElement);\n}\n\nexport default mySaga;\n","import * as React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nimport { IMAGES } from '$constants/images';\nimport { Icon } from '$components/UI/Icon';\n\nconst styles = require('./styles.scss');\n\ninterface ILeftPanel {\n  username: string,\n  userType: string,\n  minLPanel: boolean,\n}\n\nconst LeftPanel: React.FunctionComponent<ILeftPanel> = (props) => {\n  const { username, userType, minLPanel } = props;\n  return (\n    <aside className={`${styles.main} ${minLPanel && styles.minPanel}`}>\n      {minLPanel\n        ? (\n          <div className={styles.logo}>\n            <img src={IMAGES.logo} alt=\"logo\" />\n          </div>\n        )\n        : (\n          <div className={styles.prof}>\n            <img src={IMAGES.prof} alt=\"prof\" />\n            <div className={styles.username}>\n              <span>{username}</span>\n              <span>{userType}</span>\n            </div>\n          </div>\n        )\n      }\n      <div className={styles.navigating}>\n        <NavLink exact to=\"/projects\" activeClassName=\"active\">\n          <Icon icon=\"dashboard\" />\n          <span>My Projects</span>\n        </NavLink>\n        <NavLink to=\"/library\" activeClassName=\"active\">\n          <i className=\"material-icons\">drag_indicator</i>\n          <span>Storage Library</span>\n        </NavLink>\n        <NavLink to=\"/payments\" activeClassName=\"active\">\n          <i className=\"material-icons\">payment</i>\n          <span>Payment Package</span>\n        </NavLink>\n      </div>\n    </aside>\n  );\n};\n\nexport default LeftPanel;\n","import * as React from 'react';\n\ninterface IProps {\n  icon: string,\n  size?: number,\n}\n\nexport const Icon: React.FunctionComponent<IProps> = ({ icon, size = 24 }) => (\n  <svg width={size} height={size} viewBox=\"0 0 24 24\">\n    <defs>\n      <mask id={`icon-mask-${icon}`}>\n        <use xlinkHref={`${require('$sprites/icons.svg')}#icon-${icon}`} x={0} y={0} />\n      </mask>\n    </defs>\n    <rect x=\"0\" y=\"0\" width=\"24\" height=\"24\" stroke=\"none\" mask={`url(#icon-mask-${icon})`} />\n  </svg>\n);\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport Editor from '$components/Editor';\nimport NavPanelScreen from '$components/NavPanelScreen';\nimport { IProject, IProjectScreen } from '$redux/project/reducer';\nimport * as actions from '$redux/project/actions';\n\n\nexport interface match<P> {\n  params: P,\n  isExact: boolean,\n  path: string,\n  url: string,\n}\n\ninterface MatchParams {\n  projectId: string;\n}\n\ninterface IEditorProps {\n  project: IProject,\n  screen: IProjectScreen,\n  match: match<MatchParams>,\n  getProject: typeof actions.getProject,\n  getScreen: typeof actions.getScreen,\n  addScreen: typeof actions.addScreen,\n  delScreen: typeof actions.delScreen,\n  setScreen: typeof actions.setScreen,\n  addElement: typeof actions.addElement,\n  delElement: typeof actions.delElement,\n  setListSortable: typeof actions.setListSortable,\n}\n\nconst EditorLogic: React.FunctionComponent<IEditorProps> = ({\n  match: { params: { projectId } },\n  project,\n  screen,\n  getProject,\n  getScreen,\n  addScreen,\n  delScreen,\n  setScreen,\n  addElement,\n  delElement,\n  setListSortable,\n}: IEditorProps) => (\n  <React.Fragment>\n    <NavPanelScreen\n      projectId={projectId}\n      project={project}\n      screen={screen}\n      getProject={getProject}\n      getScreen={getScreen}\n      addScreen={addScreen}\n    />\n    <Editor\n      projectId={projectId}\n      screen={screen}\n      delScreen={delScreen}\n      setScreen={setScreen}\n      addElement={addElement}\n      dellElement={delElement}\n      setListSortable={setListSortable}\n    />\n  </React.Fragment>\n);\n\nconst mapStateToProps = state => ({\n  project: state.project.currentProject,\n  screen: state.project.currentScreen,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  getProject: actions.getProject,\n  getScreen: actions.getScreen,\n  addScreen: actions.addScreen,\n  delScreen: actions.delScreen,\n  setScreen: actions.setScreen,\n  addElement: actions.addElement,\n  delElement: actions.delElement,\n  setListSortable: actions.setListSortable,\n}, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EditorLogic);\n","import * as React from 'react';\nimport * as Sortable from 'react-sortablejs';\nimport classNames from 'classnames';\n\nexport type IOnChange = (parent: string, items: any) => void;\n\ninterface IComponentProps {\n  disableSortable: boolean,\n  parent: string,\n  group: string,\n  styles: any,\n  children?: any,\n  onChange: IOnChange,\n  onChoose: (itemIndex: string) => void,\n}\n\nconst Component: React.FunctionComponent<IComponentProps> = ({\n  disableSortable,\n  parent,\n  group,\n  styles,\n  children,\n  onChoose,\n  onChange,\n}) => {\n  const handleChoose = (ent) => {\n    onChoose(ent.oldIndex);\n  };\n\n  const handleChange = (items: string[], sortable, evt) => {\n    onChange(parent, items);\n  };\n\n  // if (!children) return null;\n  return (\n    <Sortable\n      id={parent}\n      className={classNames(styles.groupItem, styles[group])}\n      // tag=\"ul\" Defaults to \"div\"\n      options={{\n        swapThreshold: 1, // Threshold of the swap zone\n        draggable: '.block, .group, .elem, .input, .button, .hyperLine', // which items inside the element should be draggable\n        // animation: 150, // ms\n        group: {\n          group, // название группы;\n          // pull: 'clone', // «вытаскивать» элементы при перемещении\n          put: true, // принять элемент из другой группы, либо массив разрешенных групп.\n        },\n        onChoose: handleChoose,\n        // onAdd: this.onUpdate,\n        // onRemove: this.onUpdate,\n        // onUpdate: this.onUpdate,\n        // fallbackOnBody: true,\n        // removeCloneOnHide: true,\n        // scroll — включить авто-прокрутку;\n        // scrollSensitivity — на сколько нужно приблизится к краю для активации прокрутки;\n        // scrollSpeed — скорость прокрутки в `px`;\n      }}\n      ref={(c) => {\n        if (c) {\n          // this.sortable = c.sortable;\n          c.sortable.option('disabled', disableSortable);\n        }\n      }}\n      onChange={handleChange}\n    >\n      {children}\n    </Sortable>\n  );\n};\n\nexport const SortableGroup = Component;\n\n\n// componentWillReceiveProps(nextProps) {\n//   if (this.sortable && (nextProps.readonly !== this.props.readonly)) {\n//     this.sortable.option('disabled', nextProps.readonly);\n//   }\n// }\n\n/*\n  onUpdate = ({\n    type,\n    to,\n    from,\n    newIndex,\n    oldIndex,\n  }) => {\n    const { onAdd, onRemove, onUpdate } = this.props;\n\n    switch (type) {\n      case 'add':\n        onAdd(from.id, to.id, oldIndex, newIndex);\n        break;\n\n      case 'remove':\n        onRemove(from.id, oldIndex);\n        break;\n\n      case 'update':\n        onUpdate(from.id, oldIndex, newIndex);\n        break;\n\n      default: break;\n    }\n  };\n*/\n","import * as React from 'react';\nimport { hot } from 'react-hot-loader';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { ConnectedRouter } from 'connected-react-router';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { history } from '$redux/store';\nimport * as actions from '$redux/user/actions';\nimport LeftPanel from '$components/LeftPanel';\nimport TopPanel from '$components/TopPanel';\nimport ProjectsLogic from '$containers/ProjectsLogic';\nimport EditorLogic from '$containers/EditorLogic';\n\nconst styles = require('$styles/global.scss');\n\ninterface IAppProps {\n  minLPanel: boolean,\n\n  changeMinLPanel(): void,\n}\n\ninterface IAppState {\n}\n\nclass Component extends React.Component<IAppProps, IAppState> {\n  state = {};\n\n  onMinimiserLPanel = () => {\n    const { changeMinLPanel } = this.props;\n    changeMinLPanel();\n  };\n\n  render() {\n    const { minLPanel } = this.props;\n    return (\n      <ConnectedRouter history={history}>\n        <div className={styles.app}>\n          <LeftPanel\n            username=\"Test\"\n            userType=\"Web Developer\"\n            minLPanel={minLPanel}\n          />\n          <div className={classNames(styles.container, minLPanel && styles.minimiser)}>\n            <TopPanel\n              onMinimiserLPanel={this.onMinimiserLPanel}\n            />\n            <Switch>\n              <Route\n                path=\"/projects\"\n                component={ProjectsLogic}\n              />\n              <Route\n                path=\"/project/:projectId/\"\n                component={EditorLogic}\n              />\n              <Redirect from=\"/*\" to=\"/projects\" />\n            </Switch>\n          </div>\n        </div>\n      </ConnectedRouter>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => ({\n  minLPanel: state.user.minLPanel,\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({ ...actions }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(hot(module)(Component));\n","module.exports = __webpack_public_path__ + \"168cf469cecd6ec945f318a01c85a018.png\";","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport * as actions from '$redux/project/actions';\nimport Modals from '$components/ModalsOfMsg';\nimport Button from '$components/UI/Button';\nimport Modal from '$components/UI/Modal';\nimport { IListProject } from '$redux/project/reducer';\n\nconst styles = require('./styles.scss');\n\ninterface IDashboardProps {\n  listProject: IListProject[],\n  getListProject: actions.TGetListProject,\n  createProject: actions.TCreateProject,\n  delProject: actions.TDelProject,\n  getProject: actions.TGetProject,\n}\n\ninterface IDashboardState {\n  search: string,\n  projectName: string,\n  selectAll: boolean,\n  modalOpen: boolean,\n  newProjectDanger: boolean,\n}\n\nclass Projects extends React.Component<IDashboardProps, IDashboardState> {\n  state = {\n    search: '',\n    projectName: '',\n    modalOpen: false,\n    newProjectDanger: false,\n    selectAll: false,\n  };\n\n  componentDidMount() {\n    const { listProject, getListProject } = this.props;\n    if (getListProject && !listProject) {\n      getListProject();\n    }\n  }\n\n  handleClick = (e) => {\n    e.preventDefault();\n    console.log(e);\n  };\n\n  changeSearch = (e) => {\n    this.setState({ search: e.target.value });\n  };\n\n  changeSelectAll = (e) => {\n    this.setState({ selectAll: e.target.checked });\n  };\n\n  changeProjectName = (e) => {\n    this.setState({ projectName: e.target.value });\n  };\n\n  openModal = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  cancelModal = () => {\n    this.setState({\n      modalOpen: false,\n      newProjectDanger: false,\n    });\n  };\n\n  createProject = () => {\n    const {\n      props: { createProject },\n      state: { projectName },\n    } = this;\n\n    if (projectName.length) {\n      createProject(projectName);\n\n      this.setState({\n        modalOpen: false,\n        projectName: '',\n      });\n    } else {\n      this.setState({ newProjectDanger: true });\n    }\n  };\n\n  paymentProjectAll = () => {\n    console.log('payment all');\n  };\n\n  paymentProject(id: string) {\n    console.log('payment', id);\n  }\n\n  dowloadProject(id) {\n    console.log('download', id);\n  }\n\n  deleteProject(id) {\n    const { delProject } = this.props;\n    delProject(id);\n    console.log('delete', id);\n  }\n\n  render() {\n    const {\n      props: { listProject },\n      state: {\n        search, modalOpen, projectName, newProjectDanger,\n      },\n    } = this;\n\n    return (\n      <main className={styles.main}>\n        <div className={styles.wrapper}>\n          <div className={styles.tools}>\n            <h4>All Projects</h4>\n            <div>\n              <Button onClick={this.handleClick}>\n                <i className=\"material-icons\">shopping_cart</i>\n                Your Cart\n              </Button>\n              <Button onClick={this.openModal}>\n                Create a project\n              </Button>\n            </div>\n          </div>\n          <div className={styles.content}>\n            <div className={styles.search}>\n              <input\n                type=\"text\"\n                value={search}\n                onChange={this.changeSearch}\n                placeholder=\"Search project...\"\n              />\n              <Button onClick={console.log}>\n                Go!\n              </Button>\n            </div>\n            <table>\n              <thead>\n                <tr>\n                  <th>\n                    <input\n                      type=\"checkbox\"\n                      onChange={this.changeSelectAll}\n                    />\n                  </th>\n                  <th>Project Status</th>\n                  <th>Project Name</th>\n                  <th>Total Pages</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {\n                  listProject && listProject.map(item => (\n                    <tr key={item.id}>\n                      <td>\n                        <input\n                          type=\"checkbox\"\n                          checked={false}\n                          onChange={() => {}}\n                        />\n                      </td>\n                      <td className=\"text-green\">\n                        {item.status}\n                      </td>\n                      <td>\n                        <Link to={`/project/${item.id}`}>\n                          {item.name}\n                        </Link>\n                      </td>\n                      <td>\n                        {item.countScreens}\n                      </td>\n                      <td className={styles.textNavy}>\n                        <Button type=\"none\" onClick={() => this.dowloadProject(item.id)}>\n                          <i className=\"material-icons\">\n                            cloud_download\n                          </i>\n                        </Button>\n                        <Button type=\"none\" onClick={() => this.paymentProject(item.id)}>\n                          <i className={classNames('material-icons', styles.payment)}>\n                            payment\n                          </i>\n                        </Button>\n                        <Button type=\"none\" onClick={() => this.deleteProject(item.id)}>\n                          <i className={classNames('material-icons', styles.delete)}>\n                            delete\n                          </i>\n                        </Button>\n                      </td>\n                    </tr>\n                  ))\n                }\n              </tbody>\n            </table>\n          </div>\n          <div className={styles.actions}>\n            <Button onClick={this.paymentProjectAll}>\n              Checkout all selected projects\n            </Button>\n          </div>\n        </div>\n        { modalOpen\n          && (\n          <Modal\n            title=\"\"\n            confirmText=\"Create\"\n            onConfirm={this.createProject}\n            cancelText=\"Close\"\n            onClose={this.cancelModal}\n          >\n            <div className={styles.modal__body}>\n              <i className=\"material-icons\">\n                laptop_mac\n              </i>\n              <h6>Create Project</h6>\n              <input\n                type=\"text\"\n                value={projectName}\n                placeholder=\"Project name\"\n                onChange={this.changeProjectName}\n              />\n              { newProjectDanger\n                && <p>This field is required.</p>\n              }\n            </div>\n          </Modal>\n          )\n        }\n        <Modals />\n      </main>\n    );\n  }\n}\n\nexport default Projects;\n","module.exports = __webpack_public_path__ + \"de3c9f04d924b916fe6619e63138983e.svg\";","module.exports = __webpack_public_path__ + \"8cb04c9257b4a8c80ab792437cfefc9a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles__main__RbQPd\",\"wrapper\":\"styles__wrapper__1RIvT\",\"tools\":\"styles__tools__rpOlv\",\"content\":\"styles__content__3xaUv\",\"search\":\"styles__search__2z0fe\",\"textNavy\":\"styles__textNavy__-v5Va\",\"actions\":\"styles__actions__205gK\",\"delete\":\"styles__delete__3SamD\",\"payment\":\"styles__payment__2EjqW\",\"modal__body\":\"styles__modal__body__1GdQt\"};","import * as React from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\n\nimport Modal from '$components/UI/Modal';\nimport * as actions from '$redux/user/actions';\n\nconst styles = require('./styles.scss');\n\ninterface IComponentProps {\n  messageModal: string,\n  typeModal: string,\n  onConfirm: (status: boolean) => void,\n}\n\nconst Component: React.FunctionComponent<IComponentProps> = ({\n  messageModal,\n  typeModal,\n  onConfirm,\n}) => {\n  switch (typeModal) {\n    case 'deleteScreen':\n      return (\n        <Modal\n          title=\"\"\n          confirmText=\"Delete\"\n          onConfirm={() => onConfirm(true)}\n          cancelText=\"Close\"\n          onClose={() => onConfirm(false)}\n        >\n          <div className={styles.modal__body}>\n            {messageModal}\n          </div>\n        </Modal>\n      );\n    case 'deleteElement':\n      return (\n        <Modal\n          title=\"\"\n          confirmText=\"Add\"\n          onConfirm={() => onConfirm(true)}\n          cancelText=\"Close\"\n          onClose={() => onConfirm(false)}\n        >\n          <div className={styles.modal__body}>\n            {messageModal}\n          </div>\n        </Modal>\n      );\n    default: return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  typeModal: state.user.typeModal,\n  messageModal: state.user.messageModal,\n  // isConfirmModal: state.user.isConfirmModal,\n});\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  onConfirm: actions.onConfirmModal,\n}, dispatch);\n\nconst Modals = connect(mapStateToProps, mapDispatchToProps)(Component);\nexport default Modals;\n","import * as React from 'react';\nimport { Prompt } from 'react-router';\n\nimport { uniqueId } from '$redux/sagas';\nimport { PanelEditProps } from '$components/Editor/PanelEditProps';\nimport Recursive from '$containers/Recursive';\nimport { Icon } from '$components/UI/Icon';\nimport Button from '$components/UI/Button';\nimport Modal from '$components/UI/Modal';\nimport { ModalAddElement } from '$components/Editor/ModalAddElement';\nimport { IProjectScreen } from '$redux/project/reducer';\nimport { IOnChange } from '$components/Editor/SortableGroup';\nimport { IListSortable, ISortableItem } from '$utils/parseListItems';\nimport {\n  TDelScreen,\n  TAddElement,\n  TDelElement,\n  TSetScreen,\n  TSetListSortable,\n} from '$redux/project/actions';\n\nconst styles = require('./styles.scss');\n\n\nexport interface IActiveItem {\n  parentId: string,\n  itemId: string,\n}\n\ninterface IEditorProps {\n  projectId: string,\n  screen: IProjectScreen,\n  delScreen: TDelScreen,\n  setScreen: TSetScreen,\n  addElement: TAddElement,\n  dellElement: TDelElement,\n  setListSortable: TSetListSortable,\n}\n\ninterface IEditorState {\n  scenario: string,\n  modalAddScreen: boolean,\n  modalDellScreen: boolean,\n  activeItem: IActiveItem,\n  isMoving: boolean,\n}\n\n\nclass Editor extends React.Component<IEditorProps, IEditorState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      scenario: '',\n      modalAddScreen: false,\n      modalDellScreen: false,\n      isMoving: true,\n      activeItem: {\n        parentId: '-1',\n        itemId: 'root',\n      },\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.screen.id !== this.props.screen.id) {\n      this.setState({\n        activeItem: {\n          parentId: '-1',\n          itemId: 'root',\n        },\n      });\n    }\n  }\n\n  openModalAdd = () => {\n    this.setState({ modalAddScreen: true });\n  };\n\n  openModalDell = () => {\n    this.setState({\n      modalDellScreen: true,\n    });\n  };\n\n  closeModal = () => {\n    this.setState({\n      modalAddScreen: false,\n      modalDellScreen: false,\n    });\n  };\n\n  onConfirmModal = () => {\n    const {\n      props: { addElement },\n      state: { scenario, activeItem },\n    } = this;\n\n    const id = `${scenario}${uniqueId()}`;\n\n    const newElement: ISortableItem = {\n      id,\n      type: scenario,\n      children: [],\n    };\n\n    addElement(activeItem.itemId, newElement);\n\n    this.setState({\n      modalAddScreen: false,\n    });\n  };\n\n  onConfirmModalDell = () => {\n    const { delScreen, projectId, screen } = this.props;\n    this.setState({ modalDellScreen: false });\n\n    delScreen(projectId, screen.id);\n  };\n\n  onSelectScenario = ({ target }) => {\n    this.setState({ scenario: target.value });\n  };\n\n  onItemActive = (parentId, itemId) => {\n    this.setState({ activeItem: { parentId, itemId } });\n  };\n\n  handleDellElement = () => {\n    const {\n      props: { dellElement },\n      state: { activeItem },\n    } = this;\n\n    if (activeItem.parentId === '-1') return;\n\n    dellElement(activeItem.parentId, activeItem.itemId);\n\n    this.setState({ activeItem: { parentId: '-1', itemId: 'root' } });\n  };\n\n  updateSortableList: IOnChange = (parent, items) => {\n    const { screen: { listSortable }, setListSortable } = this.props;\n    const newLS: IListSortable = {\n      ...listSortable,\n      [parent]: {\n        ...listSortable[parent],\n        children: items,\n      },\n    };\n\n    setListSortable(newLS);\n  };\n\n  changeMoveElements = ({ target }) => {\n    this.setState({ isMoving: target.checked });\n  };\n\n  saveScreen = () => {};\n\n  changeScenario = type => ({ target }) => {\n    console.log(type, target.checked);\n  };\n\n  render() {\n    const {\n      props: { screen },\n      state: {\n        activeItem,\n        scenario,\n        modalAddScreen,\n        modalDellScreen,\n        isMoving,\n      },\n    } = this;\n\n    return (\n      <div className={styles.main}>\n        <div className={styles.navBar}>\n          <div>\n            left navPanel\n          </div>\n          <div className={styles.navBarTypeScreen}>\n            <Button type=\"none\" onClick={console.log}>\n              <Icon icon=\"computer\" size={32} />\n            </Button>\n            <Button type=\"none\" onClick={console.log}>\n              <Icon icon=\"table\" />\n            </Button>\n            <Button type=\"none\" onClick={console.log}>\n              <Icon icon=\"phone\" />\n            </Button>\n          </div>\n          <div className={styles.navBarRight}>\n            <Button\n              type=\"none\"\n              onClick={this.openModalDell}\n              disabled={!screen}\n            >\n              <Icon icon=\"delete\" size={28} />\n            </Button>\n            <Button\n              type=\"none\"\n              onClick={this.saveScreen}\n              disabled={!screen}\n            >\n              <Icon icon=\"save\" size={28} />\n            </Button>\n          </div>\n        </div>\n        <div className={styles.contain}>\n          <div className={styles.wrapper}>\n            {\n              screen && (\n                <Recursive\n                  isMoving={isMoving}\n                  item={screen.listSortable.root}\n                  styles={styles}\n                  onChoose={this.onItemActive}\n                  onChange={this.updateSortableList}\n                />\n              )\n            }\n          </div>\n          <PanelEditProps\n            activeItem={activeItem}\n            disablePanel={!screen}\n            addElement={this.openModalAdd}\n            dellElement={this.handleDellElement}\n            onChangeMove={this.changeMoveElements}\n            onChangeGrid={console.log}\n            isMoving={isMoving}\n          />\n        </div>\n        <ModalAddElement\n          active={modalAddScreen}\n          scenario={scenario}\n          changeScenario={this.changeScenario}\n          onSelectScenario={this.onSelectScenario}\n          onConfirm={this.onConfirmModal}\n          onCloseModal={this.closeModal}\n        />\n        {modalDellScreen && (\n          <Modal\n            title=\"\"\n            confirmText=\"Delete\"\n            onConfirm={this.onConfirmModalDell}\n            cancelText=\"Close\"\n            onClose={this.closeModal}\n          >\n            <div className={styles.modal__body}>\n              {`Delete Screen: ${screen.name}`}\n            </div>\n          </Modal>\n        )}\n        <Prompt\n          when={false}\n          message=\"You have unsaved changes, are you sure you want to leave?\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default Editor;\n\n/*\n  onUpdate = (parent: string, oldIndex: number, newIndex: number) => {\n    const { listItems } = this.state;\n    const el: string = listItems[parent].children[oldIndex];\n    const newList: string[] = R.insert(newIndex, el, R.without([el], listItems[parent].children));\n\n    this.setState(state => ({\n      ...state,\n      listItems: {\n        ...state.listItems,\n        [parent]: {\n          ...state.listItems[parent],\n          children: newList,\n        },\n      },\n    }));\n  };\n\n  onAdd = (from, to, oldIndex, newIndex) => {\n    const { listItems } = this.state;\n    const el: string = listItems[from].children[oldIndex];\n    const newList: string[] = R.insert(newIndex, el, listItems[to].children);\n    const newItems: ISortableItem = { ...listItems[to], parent: to, children: newList };\n    const newListItems: IListSortable = R.assoc(to, newItems, listItems);\n\n    this.setState(() => ({ listItems: newListItems }));\n  };\n\n  onRemove = (parent, index) => {\n    const { listItems } = this.state;\n    const newList: string[] = R.remove(index, 1, listItems[parent].children);\n\n    this.setState(state => ({\n      ...state,\n      listItems: {\n        ...state.listItems,\n        [parent]: {\n          ...state.listItems[parent],\n          children: newList,\n        },\n      },\n    }));\n  };\n\n  onChange = (parent, children) => {\n    this.setState(state => ({\n      ...state,\n      listItems: {\n        ...state.listItems,\n        [parent]: {\n          ...state.listItems[parent],\n          children,\n        },\n      },\n    }));\n  };\n*/\n","import { createReducer } from 'reduxsauce';\n\nimport * as ACTIONS from '$redux/user/actions';\nimport TYPES from '$redux/constants';\n\nexport type IRootState = Readonly<{\n    minLPanel: boolean,\n}>;\n\ntype UnsafeReturnType<T> = T extends (...args: any[]) => infer R ? R : any;\n\ninterface ActionHandler<T> {\n    (state: IRootState, payload: UnsafeReturnType<T>): IRootState;\n}\n\nconst changeMinLPanel: ActionHandler<typeof ACTIONS.changeMinLPanel> = state => ({\n  ...state,\n  minLPanel: !state.minLPanel,\n});\n\nconst HANDLERS = {\n  [TYPES.CHANGE_L_PANEL]: changeMinLPanel,\n};\n\nconst INITIAL_STATE: IRootState = {\n  minLPanel: false,\n};\n\nexport default createReducer(INITIAL_STATE, HANDLERS);\n","import * as React from 'react';\n\nconst styles = require('./styles.scss');\n\ninterface IProps {\n    onMinimiserLPanel(): void\n}\n\ninterface IState {\n    search: string\n}\n\nclass TopPanel extends React.Component<IProps, IState> {\n    state = {\n      search: '',\n    };\n\n    handleChange = (e) => {\n      this.setState({ search: e.target.value });\n    };\n\n    render() {\n      const {\n        state: { search },\n        props: { onMinimiserLPanel },\n      } = this;\n\n      return (\n        <header className={styles.main}>\n          <div\n            className={styles.btn_minLPanel}\n            onClick={onMinimiserLPanel}\n          >\n            <i className=\"material-icons\">menu</i>\n          </div>\n          <input\n            type=\"text\"\n            value={search}\n            onChange={this.handleChange}\n            placeholder=\"Search...\"\n          />\n        </header>\n      );\n    }\n}\n\nexport default TopPanel;\n","import createTypes from '$utils/createTypes';\n\nexport default createTypes({\n  // User actions\n  CHANGE_L_PANEL: null,\n\n  // List Project actions\n  GET_LIST_PROJECT: null,\n  SET_LIST_PROJECT: null,\n  SET_LIST_PROJECT_LOADER: null,\n\n  // Project actions\n  CREATE_PROJECT: null,\n  DEL_PROJECT: null,\n  GET_PROJECT: null,\n  SET_PROJECT: null,\n  SET_PROJECT_LOADER: null,\n\n  // Screen actions\n  GET_SCREEN: null,\n  SET_SCREEN: null,\n\n  ADD_SCREEN: null,\n  DEL_SCREEN: null,\n  ADD_ELEMENT: null,\n  DEL_ELEMENT: null,\n  SET_LIST_SORTABLE: null,\n  SET_SCREEN_DATA: null,\n  SET_SCREEN_LOADER: null,\n});\n","import { IListScreen } from '$redux/project/reducer';\n\nexport interface ISortableItem {\n  id: string,\n  type: string,\n  // parent: string,\n  children: string[],\n}\n\nexport interface IListSortable {\n  [x: string]: ISortableItem\n}\n\ntype FnParseList = (items?: IListScreen[], parent?: string, list?: IListSortable) => IListSortable;\n\n\nconst itemId = ({ id, type }) => (`${type}${id}`);\nconst listChildren = ({ children }) => ((children && children.map(itemId)) || []);\nconst itemRoot = items => ({\n  type: 'root',\n  id: 'root',\n  children: items.map(itemId) || [],\n});\n\n\nexport const parseList: FnParseList = (items = []) => (\n  items.reduce((obj, item) => ({\n    ...obj,\n    [itemId(item)]: {\n      id: itemId(item),\n      // parent,\n      type: item.type,\n      children: listChildren(item),\n    },\n    ...(\n      (\n        item.children && item.children.length > 0\n        && parseList(item.children, itemId(item))\n      ) || {}),\n  }), {})\n);\n\nexport const getList: FnParseList = (items = []) => ({\n  root: itemRoot(items),\n  ...parseList(items),\n});\n\n\ntype FnParseListRevers = (items: IListSortable, parent?: string) => IListScreen[];\n\nexport const getListRevers: FnParseListRevers = (listItems, parent = 'root') => (\n  listItems[parent].children.map((item) => {\n    if (listItems[item].children) {\n      return ({\n        id: Number(listItems[item].id.replace(listItems[item].type, '')),\n        type: listItems[item].type,\n        children: getListRevers(listItems, item),\n      });\n    }\n\n    return ({\n      id: Number(listItems[item].id.replace(listItems[item].type, '')),\n      type: listItems[item].type,\n      children: [],\n    });\n  })\n);\n","interface IOptions {\n  label: string,\n  value: string,\n};\n\nexport const optionsUIMenu: IOptions[] = [\n  { label: 'Block', value: 'block' },\n  { label: 'Group', value: 'group' },\n  { label: 'Element', value: 'elem' },\n  { label: 'Input', value: 'input' },\n  { label: 'Button', value: 'button' },\n  { label: 'HyperLine', value: 'hyperLine' },\n  // { label: 'Text', value: 'text' },\n  // { label: 'RadioButton', value: 'radioButton' },\n  // { label: 'Checkbox', value: 'checkbox' },\n  // { label: 'Sign in', value: 'signIn' },\n  // { label: 'Sign up', value: 'signUp' },\n  // { label: '+Custom', value: 'custom' },\n];\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"styles__main__aKSdk\",\"btn_minLPanel\":\"styles__btn_minLPanel__3uPzk\"};","import * as React from 'react';\n\nexport interface IElement {\n  key: string,\n  id: string,\n  children?: any,\n}\n\ntype TRenderElement = (args: IElement) => React.ReactNode;\n\nconst renderBlock: TRenderElement = ({ id, key, children }) => (\n  <div className=\"block\" key={key} data-id={id}>\n    {id}\n    {children || null}\n  </div>\n);\n\nconst renderGroup: TRenderElement = ({ id, key, children }) => (\n  <div className=\"group\" key={key} data-id={id}>\n    {id}\n    {children || null}\n  </div>\n);\n\nconst renderElem: TRenderElement = ({ id, key, children }) => (\n  <div className=\"elem\" key={key} data-id={id}>\n    {id}\n    {children || null}\n  </div>\n);\n\nconst renderButton: TRenderElement = ({ id, key, children }) => (\n  <button\n    key={key}\n    className=\"button\"\n    data-id={id}\n    type=\"button\"\n  >\n    Button\n    {children || null}\n  </button>\n);\n\nconst renderHyperLine: TRenderElement = ({ id, key, children }) => (\n  <a\n    key={key}\n    className=\"hyperLink\"\n    data-id={id}\n    href=\"javascript:void(0);\"\n  >\n    HyperLink\n    {children || null}\n  </a>\n);\n\nconst renderInput: TRenderElement = ({ id, key, children }) => (\n  <div\n    key={key}\n    data-id={id}\n    className=\"input\"\n  >\n    <input type=\"text\" placeholder=\"input\" />\n    {children || null}\n  </div>\n);\n\nexport const RENDERERS = {\n  block: renderBlock,\n  group: renderGroup,\n  elem: renderElem,\n  button: renderButton,\n  input: renderInput,\n  hyperLine: renderHyperLine,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"global__app__ryQ3h\",\"container\":\"global__container__2yBDx\",\"minimiser\":\"global__minimiser__arucL\"};","import TYPES from '$redux/constants';\nimport {\n  IListProject,\n  IProject,\n  IProjectScreen,\n} from '$redux/project/reducer';\nimport { IListSortable, ISortableItem } from '$utils/parseListItems';\n\n\nexport type TGetListProject = () => void;\nexport type TGetProject = (id: string) => void;\nexport type TCreateProject = (name: string) => void;\nexport type TDelProject = (id: string) => void;\nexport type TGetScreen = (projectId: string, screenId: string) => void;\nexport type TAddScreen = (projectId: string, name: string) => void;\nexport type TDelScreen = (projectId: string, screenId: string) => void;\nexport type TSetListSortable = (listSortable: IListSortable) => void;\nexport type TSetScreen = (screen: IProjectScreen) => ({ type: string, screen: IProjectScreen });\nexport type TSetLoader = (active: boolean) => ({ type: string, active: boolean });\nexport type TAddElement = (parentId: string, item: ISortableItem) => void;\nexport type TDelElement = (parentId: string, itemId: string) => void;\n// export type ISetScreenData = (screenData: ) => void;\n\n\nexport const getListProject: TGetListProject = () => ({\n  type: TYPES.GET_LIST_PROJECT,\n});\n\nexport const setListProjects = (listProject: IListProject[]) => ({\n  type: TYPES.SET_LIST_PROJECT,\n  listProject,\n});\n\n\nexport const createProject: TCreateProject = name => ({\n  type: TYPES.CREATE_PROJECT,\n  name,\n});\n\nexport const delProject: TDelProject = id => ({\n  type: TYPES.DEL_PROJECT,\n  id,\n});\n\nexport const getProject: TGetProject = id => ({\n  type: TYPES.GET_PROJECT,\n  id,\n});\n\nexport const setProject = (project: IProject) => ({\n  type: TYPES.SET_PROJECT,\n  project,\n});\n\nexport const setListProjectLoader: TSetLoader = active => ({\n  type: TYPES.SET_LIST_PROJECT_LOADER,\n  active,\n});\n\nexport const setProjectLoader: TSetLoader = active => ({\n  type: TYPES.SET_PROJECT_LOADER,\n  active,\n});\n\nexport const setScreenLoader: TSetLoader = active => ({\n  type: TYPES.SET_SCREEN_LOADER,\n  active,\n});\n\nexport const delScreen: TDelScreen = (projectId, screenId) => ({\n  type: TYPES.DEL_SCREEN,\n  payload: { projectId, screenId },\n});\n\nexport const addScreen: TAddScreen = (projectId, name) => ({\n  type: TYPES.ADD_SCREEN,\n  payload: { projectId, name },\n});\n\nexport const getScreen: TGetScreen = (projectId, screenId) => ({\n  type: TYPES.GET_SCREEN,\n  payload: { projectId, screenId },\n});\n\nexport const setListSortable: TSetListSortable = itemSortable => ({\n  type: TYPES.SET_LIST_SORTABLE,\n  itemSortable,\n});\n\nexport const setScreen: TSetScreen = screen => ({\n  type: TYPES.SET_SCREEN,\n  screen,\n});\n\nexport const addElement: TAddElement = (parentId, item) => ({\n  type: TYPES.ADD_ELEMENT,\n  payload: { parentId, item },\n});\n\nexport const delElement: TDelElement = (parentId, itemId) => ({\n  type: TYPES.DEL_ELEMENT,\n  payload: { parentId, itemId },\n});\n\n// export const setScreenData: ISetScreenData = screenData => ({\n//   type: TYPES.SET_SCREEN_DATA,\n//   screenData,\n// });\n","import * as React from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\n\nimport * as actions from '$redux/project/actions';\nimport { RENDERERS } from '$components/UI/RenderElements';\nimport { IListSortable, ISortableItem } from '$utils/parseListItems';\nimport { SortableGroup } from '$components/Editor/SortableGroup';\n\ninterface IRecursiveProps {\n  isMoving: boolean,\n  item: ISortableItem,\n  styles: any,\n  onChoose: (parentId: string, itemId) => void,\n  onChange: (parent, items) => void,\n  listItems: IListSortable,\n  listSortable: IListSortable,\n  setListSortable: typeof actions.setListSortable,\n}\n\nclass Recursive extends React.Component<IRecursiveProps> {\n  handleChoose = (itemIndex) => {\n    const { item, onChoose } = this.props;\n    const itemId: string = item.children[itemIndex];\n\n    onChoose(item.id, itemId);\n  };\n\n  render() {\n    const {\n      isMoving,\n      item,\n      styles,\n      onChoose,\n      onChange,\n      listSortable,\n    } = this.props;\n\n    return (\n      <SortableGroup\n        disableSortable={!isMoving}\n        parent={item.id}\n        group=\"group\"\n        styles={styles}\n        onChoose={this.handleChoose}\n        onChange={onChange}\n      >\n        {\n          item.children.map((itemId) => {\n            const currentItem = listSortable[itemId];\n            const element = RENDERERS[currentItem.type];\n\n            if (element) {\n              return element({\n                key: itemId,\n                id: itemId,\n                children: <RecursiveConnected\n                  key={itemId}\n                  isMoving={isMoving}\n                  item={currentItem}\n                  styles={styles}\n                  onChoose={onChoose}\n                  onChange={onChange}\n                />,\n              });\n            }\n\n            return null;\n          })\n        }\n      </SortableGroup>\n    );\n  }\n}\n\nconst mapStateToProps = (state, props) => {\n  const { currentScreen: { listSortable } } = state.project;\n  const itemParent = listSortable[props.item.id];\n\n  const curListSortable = itemParent.children.reduce((items, childId) => ({\n    ...items,\n    [childId]: listSortable[childId],\n  }), {});\n\n  return {\n    listSortable: curListSortable,\n  };\n};\n\nconst mapDispatchToProps = dispatch => bindActionCreators({\n  setListSortable: actions.setListSortable,\n}, dispatch);\n\nconst RecursiveConnected = connect(mapStateToProps, mapDispatchToProps)(Recursive);\nexport default RecursiveConnected;\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nconst styles = require('./styles.scss');\n\nconst validTypes = [\n  'none',\n  'primary',\n  'confirm',\n  'secondary',\n];\n\ninterface IButtonProps {\n  children?: any,\n  type?: string,\n  disabled?: boolean,\n  onClick: (e: any) => void\n  className?: string,\n}\n\nconst Button: React.FunctionComponent<IButtonProps> = ({\n  children, type, disabled, onClick, className = '',\n}) => {\n  const props: any = {\n    onClick,\n  };\n\n  if (!type || validTypes.indexOf(type) === -1) {\n    type = 'confirm';\n  }\n\n  props.className = classNames(styles.button, styles[type], className);\n\n  if (disabled) props.disabled = 'disabled';\n\n  return (\n    <button type=\"button\" {...props}>\n      <span>\n        {children}\n      </span>\n    </button>\n  );\n};\n\nexport default Button;\n","import TYPES from '$redux/constants';\n\nexport const changeMinLPanel = () => ({ type: TYPES.CHANGE_L_PANEL });\n\nexport const onConfirmModal = status => ({\n  type: TYPES.ON_CONFIRM_MODAL,\n  status,\n});\n","import * as React from 'react';\nimport classNames from 'classnames';\n\nimport { IProject, IProjectScreen } from '$redux/project/reducer';\nimport Modal from '$components/UI/Modal';\nimport { Icon } from '$components/UI/Icon';\nimport Button from '$components/UI/Button';\nimport { TAddScreen, TGetProject, TGetScreen } from '$redux/project/actions';\n\nconst styles = require('./styles.scss');\n\ninterface IProps {\n  projectId: string,\n  project: IProject,\n  screen: IProjectScreen,\n  getProject: TGetProject,\n  getScreen: TGetScreen,\n  addScreen: TAddScreen,\n}\n\ninterface IState {\n  screenName: string,\n  modalOpen: boolean,\n  modalMsgDanger: string,\n}\n\nclass NavPanelScreen extends React.Component<IProps, IState> {\n  state = {\n    screenName: '',\n    modalOpen: false,\n    modalMsgDanger: '',\n  };\n\n  componentDidMount() {\n    const { getProject, projectId } = this.props;\n\n    if (getProject) {\n      getProject(projectId);\n    }\n  }\n\n  openScreen = (id: string) => {\n    const { getScreen, projectId } = this.props;\n    getScreen(projectId, id);\n  };\n\n  changeScreenName = (e) => {\n    this.setState({\n      screenName: e.target.value,\n      modalMsgDanger: '',\n    });\n  };\n\n  openModal = () => {\n    this.setState({ modalOpen: true });\n  };\n\n  cancelModal = () => {\n    this.setState({\n      screenName: '',\n      modalMsgDanger: '',\n      modalOpen: false,\n    });\n  };\n\n  handleAddScreen = () => {\n    const {\n      props: { projectId, addScreen },\n      state: { screenName },\n    } = this;\n\n    if (screenName === '') {\n      this.setState({ modalMsgDanger: 'Name not specified' });\n    } else {\n      addScreen(projectId, screenName);\n      this.cancelModal();\n    }\n  };\n\n  render() {\n    const {\n      props: { project, screen },\n      state: { modalOpen, screenName, modalMsgDanger },\n    } = this;\n\n    return (\n      <div className={styles.main}>\n        <div className={classNames(styles.addScreen, styles.tabs)}>\n          <Button onClick={this.openModal} type=\"none\">\n            <Icon icon=\"addScreen\" size={28} />\n          </Button>\n        </div>\n        {project && project.listScreen && project.listScreen.map(s => (\n          <Button\n            key={s.id}\n            type=\"none\"\n            className={classNames(styles.tabs, screen && s.id === screen.id ? styles.active : '')}\n            onClick={() => this.openScreen(s.id)}\n          >\n            {s.name}\n          </Button>\n        ))}\n        {modalOpen\n        && (\n          <Modal\n            title=\"Add Screen\"\n            confirmText=\"Add\"\n            onConfirm={this.handleAddScreen}\n            cancelText=\"Close\"\n            onClose={this.cancelModal}\n          >\n            <div className={styles.modal__body}>\n              <input\n                type=\"text\"\n                className={styles.screenName}\n                value={screenName}\n                placeholder=\"Screen name\"\n                onChange={this.changeScreenName}\n              />\n              {modalMsgDanger\n              && <p>{modalMsgDanger}</p>\n              }\n            </div>\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default NavPanelScreen;\n","import * as React from 'react';\n\nimport Checkbox from '$components/UI/Checkbox';\nimport { optionsUIMenu } from '$constants/menu';\nimport Modal from '$components/UI/Modal';\n\nconst styles = require('./styles.scss');\n\ninterface IComponentProps {\n  active: boolean,\n  scenario: string,\n  changeScenario: (type: string) => void,\n  onSelectScenario: (event) => void,\n  onConfirm: () => void,\n  onCloseModal: () => void,\n}\n\nconst Component: React.FunctionComponent<IComponentProps> = ({\n  active,\n  scenario,\n  changeScenario,\n  onSelectScenario,\n  onConfirm,\n  onCloseModal,\n}) => active ? (\n  <Modal\n    title=\"\"\n    confirmText=\"Add\"\n    onConfirm={onConfirm}\n    cancelText=\"Close\"\n    onClose={onCloseModal}\n  >\n    <div className={styles.modal__body}>\n      <div className={styles.section}>\n        <h5>Scenario</h5>\n        <Checkbox\n          name=\"oneClick\"\n          label=\"one click scenario\"\n          onChange={() => changeScenario('oneClick')}\n        />\n        <Checkbox\n          name=\"combined\"\n          label=\"combined scenario\"\n          onChange={() => changeScenario('combined')}\n        />\n        <select onChange={onSelectScenario} value={scenario}>\n          <option value=\"\">Scenario type</option>\n          {optionsUIMenu.map(item => (\n            <option key={item.value} value={item.value}>{item.label}</option>\n          ))}\n        </select>\n      </div>\n      <div className={styles.section}>\n        <h5>UI element</h5>\n        <Checkbox\n          name=\"picture\"\n          label=\"picture\"\n          onChange={() => changeScenario('picture')}\n        />\n        <Checkbox\n          name=\"text\"\n          label=\"text\"\n          onChange={() => changeScenario('text')}\n        />\n        <Checkbox\n          name=\"widget\"\n          label=\"widget\"\n          onChange={() => changeScenario('widget')}\n        />\n        <select>\n          <option value=\"\">Widget type</option>\n          <option value=\"maps\">Google maps</option>\n          <option value=\"calendar\">Calendar</option>\n          <option value=\"pictureDay\">Picture of the day</option>\n        </select>\n      </div>\n    </div>\n  </Modal>\n) : null;\n\nexport const ModalAddElement = Component;\n","import * as React from 'react';\n\nconst styles = require('./styles.scss');\n\ninterface ICheckbox {\n  name: string,\n  label?: string,\n  disabled?: boolean,\n  onChange: (event) => void,\n  checked?: boolean\n}\n\nlet Ceckbox = (props: ICheckbox) => {\n  const {\n    name,\n    label,\n    onChange,\n    checked,\n  } = props;\n\n  return (\n    <label\n      className={styles.checkbox}\n      htmlFor={name}\n    >\n      <input\n        name={name}\n        type=\"checkbox\"\n        onChange={onChange}\n        checked={checked}\n      />\n      <span>\n        {label}\n      </span>\n    </label>\n  );\n};\n\nexport default Ceckbox = React.memo(Ceckbox);\n","export default function createTypes(types) {\n  const newTypes = { ...types };\n  Object.keys(newTypes).forEach((key) => {\n    newTypes[key] = key;\n  });\n  return newTypes;\n}\n"],"sourceRoot":""}